/**
* \file csx_test.h
* \brief <b>CSX-512 Known Answer Tests</b> \n
* CSXP40 known answer comparison (KAT) tests. \n
* Test vectors are from the CEX cryptographic library, reference:
* The C++ <a href="https://github.com/Steppenwolfe65/CEX">CEX cryptographic library</a>
* \author John Underhill \n
* \date October 13, 2021
*/

#ifndef QSCTEST_CSX_TEST_H
#define QSCTEST_CSX_TEST_H

#include "common.h"
#include "csx.h"

#define QSCTEST_CSX_TEST_CYCLES 100

#if defined(QSC_SYSTEM_AVX_INTRINSICS)
#if !defined(QSC_CSX_AUTHENTICATED)
#		define QSCTEST_CSX_WIDE_BLOCK_TESTS
#	endif
#endif

/**
* \brief Tests the CSX 512-bit key KAT vectors from CEX.
* The C++ <a href="https://github.com/Steppenwolfe65/CEX">CEX cryptrographic library</a>
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* The test uses use original (and authoritative) vectors generated by the CEX library implementation</a>
* <a href="https://github.com/Steppenwolfe65/CEX/blob/master/Test/CSXTest.cpp">CEX CSX tests</a>
*/
bool qsctest_csx512_kat(void);

/**
* \brief Tests CSX-512 with random inputs for correct operation.
*
* \return Returns true for success
*/
bool qsctest_csx512_stress(void);

#if defined(QSCTEST_CSX_WIDE_BLOCK_TESTS)
/**
* \brief Tests the CSX AVX functions for equal output to sequential processing.
*
* \return Returns true for success
*/
bool qsctest_csx_wide_equality(void);
#endif

/**
* \brief Run all tests.
*/
void qsctest_csx_run(void);

#endif
